clear all close all%B1T = 0.01;over = 10;a = [0 0.5 1];Ts = T/over;Fs = 1/Ts;A = 5;k = 0:2*A;[phi1,t1] = srrc_pulse(T, over, A, a(1));[phi2,t2] = srrc_pulse(T, over, A, a(2));[phi3,t3] = srrc_pulse(T, over, A, a(3));for k2 = 0:3    figure();  plot(t1,phi1,"b")  hold on  plot(t2,phi2,"r")  plot(t3,phi3,"g")  moved_phi1 = [zeros(1,k2*Fs*T) phi1(1:end)];  t1_ = [t1(1):Ts:t1(end)+k2*T];  plot(t1_,moved_phi1,"b")  moved_phi2 = [zeros(1,k2*Fs*T) phi2(1:end)];  t2_ = [t2(1):Ts:t2(end)+k2*T];  plot(t2_,moved_phi2,"r")  moved_phi3 = [zeros(1,k2*Fs*T) phi3(1:end)];  t3_ = [t3(1):Ts:t3(end)+k2*T];  plot(t3_,moved_phi3,"g")  grid on;  title("SRRC pulse and delayed SRRC pulse");  legend("a = 0", "a = 0.5", "a = 1");  xlabel("Time (sec)");  ylabel("SRRC pulses");  hold off  endfor k2 = 0:3    figure();  moved_phi1 = [zeros(1,k2*Fs*T) phi1(1:end)];  tmp_phi1 = [phi1(1:end) zeros(1,k2*Fs*T)];  t1_ = [t1(1):Ts:t1(end)+k2*T];  phi1_mult_movedphi1 = tmp_phi1.*moved_phi1;  plot(t1_,phi1_mult_movedphi1,"b")  hold on  moved_phi2 = [zeros(1,k2*Fs*T) phi2(1:end)];  tmp_phi2 = [phi2(1:end) zeros(1,k2*Fs*T)];  t2_ = [t2(1):Ts:t2(end)+k2*T];  phi2_mult_movedphi2 = tmp_phi2.*moved_phi2;  plot(t2_,phi2_mult_movedphi2,"r")  moved_phi3 = [zeros(1,k2*Fs*T) phi3(1:end)];  tmp_phi3 = [phi3(1:end) zeros(1,k2*Fs*T)];  t3_ = [t3(1):Ts:t3(end)+k2*T];  phi3_mult_movedphi3 = tmp_phi3.*moved_phi3;  plot(t3_,phi3_mult_movedphi3,"g")  grid on  title("Product of SRRC pulse and delayed SRRC pulse");  legend("a = 0", "a = 0.5", "a = 1");  xlabel("Time (sec)");  ylabel("SRRC pulses");  hold off  endfor k2 = 0:3    moved_phi1 = [zeros(1,k2*Fs*T) phi1(1:end)];  tmp_phi1 = [phi1(1:end) zeros(1,k2*Fs*T)];  phi1_mult_movedphi1 = tmp_phi1.*moved_phi1;  integral1 = sum(phi1_mult_movedphi1)*Ts    moved_phi2 = [zeros(1,k2*Fs*T) phi2(1:end)];  tmp_phi2 = [phi2(1:end) zeros(1,k2*Fs*T)];  phi2_mult_movedphi2 = tmp_phi2.*moved_phi2;  integral2 = sum(phi2_mult_movedphi2)*Ts    moved_phi3 = [zeros(1,k2*Fs*T) phi3(1:end)];  tmp_phi3 = [phi3(1:end) zeros(1,k2*Fs*T)];  phi3_mult_movedphi3 = tmp_phi3.*moved_phi3;  integral3 = sum(phi3_mult_movedphi3)*Ts  end  